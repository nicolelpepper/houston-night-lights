---
title: "Homework Assignment #3"
subtitle: "Houston Power Outage"
author: "Nicole Pepper"
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
format:
  html:
    toc: true 
editor_options: 
  chunk_output_type: console
---

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Load Libraries ----

# Load libraries
library(terra)
library(geodata)
library(tidyverse)
library(tmap)
library(kableExtra)
library(spData)
library(spDataLarge)
library(here)
library(viridisLite) 
library(terra)
library(sf)
library(purrr)
library(stars)
library(raster)
library(dplyr)
library(gifski)
```

Read in Project Data:

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Read in Night Light Data ----

# Read in the night light raster data
before_a <- rast("data/VNP46A1/VNP46A1.A2021038.h08v05.001.2021039064328.tif") 
before_b <- rast("data/VNP46A1/VNP46A1.A2021038.h08v06.001.2021039064329.tif")  
after_a <- rast("data/VNP46A1/VNP46A1.A2021047.h08v05.001.2021048091106.tif")
after_b <- rast("data/VNP46A1/VNP46A1.A2021047.h08v06.001.2021048091105.tif") 

# Merge the two images per time period (before & after)
before_lights <- merge(before_a,before_b) 
after_lights <- merge(after_a,after_b) 

# ---- Read in Buildings and Roads Data ----

# Read in buildings layer
buildings <- sf::read_sf(here::here("data","gis_osm_buildings_a_free_1.gpkg"),
                         query = "SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL) OR type in ('residential',
                         'apartments', 'house', 'static_caravan', 'detached')")

# Read in roads layers
roads <- sf::read_sf(here::here("data","gis_osm_roads_free_1.gpkg"), query = "SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'") 

# ---- Read in Census Data ----

# Read in Census geodatabase layers in separately and join geometry
geom_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                          layer = 'ACS_2019_5YR_TRACT_48_TEXAS')
income_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                          layer = 'X19_INCOME')
              # Assign geom_layer as the geometry for the income layer
              geom_layer <- st_as_sfc(geom_layer)
texas_census <- st_sf(income_layer, geom = geom_layer)  %>%
  dplyr::select(id = GEOID,
                med_inc = B19013e1)
              # MEDIAN HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2011 INFLATION-ADJUSTED DOLLARS)
              # Check out the layers in the gdb, select 
              #st_layers('data/ACS_2019_5YR_TRACT_48_TEXAS.gdb')

```

Inspect & Prepare Vector Data CRS

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Change CRS of Vector Data ----   
              
# Create a vector data list
vector_list <- c("buildings", "roads", "texas_census")
              
# Transform CRS to EPSG: 3083
for (i in vector_list) {
  assign(i, if (st_crs(get(i))$epsg != 3083)
         st_transform(get(i), crs = 3083)
         else get(i))
}
       
# # Transform CRS for raster data to EPSG: 3083
# for (r in seq_along(raster_list)) {
#   if (inherits(raster_list[[r]], "Raster")) {
#     if (!compareCRS(crs(raster_list[[r]]), CRS("+init=epsg:3083"))) {
#       raster_list[[r]] <- projectRaster(raster_list[[r]], crs = CRS("+init=epsg:3083"))
#     }
# }}
```

Preliminary data exploration

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Preliminary Data Exploration ----   

# Projected BBox Bounds
bbox_proj <- st_bbox(c(xmin = 1838039,
                  xmax = 2006680,
                  ymin = 7216740,
                  ymax = 7385430))

houston_buildings <- st_crop(buildings, bbox_proj) 
houston_census <- st_crop(texas_census, bbox_proj)


```


Calculate change in lights
```{r}
#| code-fold: true
#| code-summary: "Display Code"

# Diff in lights
diff_lights <- before_lights - after_lights

# Reclassify raster values for above and below the 200 threshold
# WE COULD DO THE CLASS BRACKETING METHOD TO STREAMLINE?
#diff_rcl <- diff_lights[diff_lights < 200] <- NA

# ---- Create a blackout mask ----   

# Reclassify raster values for above and below the 200 threshold
# WE COULD DO THE CLASS BRACKETING METHOD TO STREAMLINE?
rcl <- matrix(c(-Inf, 200, 1,
                200, Inf, 2),
              ncol = 3, byrow = TRUE)
reclassified <- terra::classify(diff_lights, rcl = rcl)
# Treat as factor - IS THIS NECESSARY?
values(reclassified) <- as.factor(values(reclassified))

# Reclassify values below 200 to be NA
reclassified[reclassified == 1] <- NA

# Convert SpatRaster to polygons
diff_poly <- as.polygons(reclassified) %>% 
  st_as_sf()

```

# Set of maps comparing night light intensities before and after the first to storms
```{r}
# ---- Crop before and after images to Houston ----   

# Define Houston Boundary Extent
bbox <- st_bbox(c(xmin = -96.5,
                  xmax = -94.5,
                  ymin = 29,
                  ymax = 30.5))

# Crop before and after images
before_lights <- crop(before_lights, bbox) 
after_lights <- crop(after_lights, bbox)

# ---- Define Night Light Color Palette ----   
light_palette <- colorRampPalette(c("#0D0D0D", "#6C378F", "#8C206F", "#F29A2E","#FFE802", "lightyellow"))

# ---- Create Before Map ----   
before_map <- tm_shape(before_lights) + 
  tm_raster(palette = light_palette(10),
            style = "cont",
            stretch = "hist",
            colorNA ="#011526",
            breaks = c(0, 9000),
            legend.is.portrait = FALSE,
            title = "Light Intensity")+
  tm_layout(legend.position = c(.8, 0.03),
            legend.text.color = "#D3DFEB",
            legend.show = TRUE,
            legend.hist.width = 1,
            legend.format = list(digits = 0),
            legend.title.color = "#D3DFEB",
            legend.title.size = 1,
            frame = FALSE) + 
  tm_credits("Houston, Texas", 
             position = c(.04, 0.9),
             size = 1.2,
             col = "#D3DFEB",
             fontface = "bold") + 
   tm_credits("Before: 2021-02-07", 
             position = c(.04, 0.85),
             size = 1,
             col = "#D3DFEB")

# ---- Create After Map ----   
after_map <- tm_shape(after_lights) + 
  tm_raster(palette = light_palette(10),
            style = "cont",
            stretch = "hist",
            colorNA ="#011526",
            breaks = c(0, 9000),
            legend.is.portrait = FALSE,
            title = "Light Intensity")+
  tm_layout(legend.position = c(.8, 0.03),
            legend.text.color = "#D3DFEB",
            legend.show = TRUE,
            legend.hist.width = 1,
            legend.format = list(digits = 0),
            legend.title.color = "#D3DFEB",
            legend.title.size = 1,
            frame = FALSE) + 
  tm_credits("Houston, Texas", 
             position = c(.04, 0.9),
             size = 1.2,
             col = "#D3DFEB",
             fontface = "bold") + 
   tm_credits("After: 2021-02-16", 
             position = c(.04, 0.85),
             size = 1,
             col = "#D3DFEB")

# ---- Combine Before and After Maps into an Animation ----

maps_combo <- list(before_map, after_map)  
outage_animation <- tmap_animation(maps_combo, delay = 300, width = 600, height = 600) 

before_map
after_map
```


Clean Lights
```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Exclude highways from blackout image ----

# Crop to Houston
diff_crop <- st_crop(diff_poly, bbox) %>%
  st_make_valid() %>%
  st_transform(crs = 3083)

# Buffer HWY data
highways <- st_buffer(roads,
                      dist = 200) %>%
            st_union()

# Remove highways from differenced images
diff_hwy_masked <- st_difference(diff_crop, highways)

# Preliminary Map of Blackout Areas
tm_shape(diff_hwy_masked) + 
  tm_polygons(col = "orange", border.col = "darkorange") +
  tm_layout(main.title = "Houston Lights Difference (Highways Masked)",
            frame = FALSE)

```

```{r}
# tm_shape(houston_census) +
#   tm_polygons() +
#   tm_shape(diff_hwy_masked) +
#   tm_borders() +
#   tm_layout(
#     title = "Houston Census and Power Outage Map",
#     legend.outside = TRUE
#   )
```

### Identify homes likely impacted by blackouts
```{r}
#| code-fold: true
#| code-summary: "Display Code"


# ---- Select buildings that overlap with areas that experienced a blackout  ----   
building_blackouts <- st_intersection(diff_hwy_masked, houston_buildings) 

# tm_shape(building_blackouts) + 
#   tm_polygons(col = "lightblue", border.col = "darkblue") +
#   tm_layout(main.title = "Building Blackouts",
#             frame = FALSE)

```

# Map of the homes in in Houston that lost power
```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Map of the homes in in Houston that lost power  ----   

tm_shape(building_blackouts) + 
  tm_fill() +
  tm_layout(main.title = "Homes in Houston that Lost Power",
            frame = FALSE)

# Investigate the number of homes in Houston that lost power
print(paste("The number of homes in Houston that lost power was approximately", nrow(building_blackouts)))
```

### Identify census tracts impacted by blackouts

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Identify census tracts that containing buildings that experienced a blackout  ----  

# Get list of census tracts that contain blackout buildings
census_blackouts <- st_intersection(houston_census, building_blackouts)

# Get unique census tract IDs that had blackouts
blackout_tract_ids <- unique(census_blackouts$id)  # Adjust column name if different

# Add a new column to the original houston_inc indicating blackout status
houston_census$blackout_status <- ifelse(houston_census$id %in% blackout_tract_ids, "Yes Blackout", "No Blackout")

tm_shape(houston_census) + 
  tm_polygons(col = "pink", border.col = "red") +
  tm_layout(main.title = "Census Blackouts",
            frame = FALSE)
```

```{r}
# # Dissolve by blackout_status
# houston_inc_dissolved <- houston_inc %>%
#   group_by(blackout_status) %>%
#   summarise(
#     total_income = sum(med_inc, na.rm = TRUE),  # Replace 'income_column' with the actual income column name
#     avg_income = mean(med_inc, na.rm = TRUE)    # Or use any other summary statistic
#   )

```

```{r}
tm_shape(houston_census) +
  tm_polygons(col = "med_inc", palette = "Reds", title = "Median Income") 
```

```{r}
table(houston_census$blackout_status)
```

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Plot Difference ----   

ggplot(data = houston_census) +
  geom_violin(aes(x = med_inc, y = blackout_status, fill = blackout_status)) +
  labs(
    x = "Blackout Status",
    y = "Median Household Income",
    title = "Income Distribution by Blackout Status"
  ) +
  theme_minimal()

```

```{r}
# palette

# Dark Blues - #002129, #08295E, #011526
# Dark Grey - #272D2E
# Yellows - #FFE802, #FFFC71, #F2BA52
# Pink - #FF2171
# Purple
# 
```

This project investigates the impact of a severe weather event in 2021 which caused widespread power outages throughout the state of Texas, including Houston. I use NASA Visible Infrared Imaging Radiometer Suite (VIIRS) nighttime imagery to detect night lights to compare the intensity of night lights before and after the first major storm. I also overlayed the imagery with census tract data pertaining to the median household income. I found that the median household income for census tracts that experienced a blackout was ____ and the median for tracts that didn't experience an outage was ___. For this project, I did not normalize for area, so it is possible that that could be influencing the median values.