---
title: "Homework Assignment #3"
subtitle: "Houston Power Outage"
author: "Nicole Pepper"
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
  results: hide
format:
  html:
    toc: true 
    code-fold: true
    code-summary: "Display Code"
editor_options: 
  chunk_output_type: console
---

### Set Up Workspace
```{r}
# ---- Load Libraries ----

# Load libraries
library(terra)
library(geodata)
library(tidyverse)
library(tmap)
library(kableExtra)
library(spData)
library(here)
library(terra)
library(sf)
library(stars)
library(raster)
library(dplyr)
library(gifski)
library(slideview)
```

### Read in Project Data:
```{r}
# ---- Read in Night Light Data ----

# Read in the night light raster data
before_a <- rast("data/VNP46A1/VNP46A1.A2021038.h08v05.001.2021039064328.tif") 
before_b <- rast("data/VNP46A1/VNP46A1.A2021038.h08v06.001.2021039064329.tif")  
after_a <- rast("data/VNP46A1/VNP46A1.A2021047.h08v05.001.2021048091106.tif")
after_b <- rast("data/VNP46A1/VNP46A1.A2021047.h08v06.001.2021048091105.tif") 

# Merge the two images per time period (before & after)
before_lights <- merge(before_a,before_b) 
after_lights <- merge(after_a,after_b) 

# ---- Read in Buildings and Roads Data ----

# Read in buildings layer
buildings <- sf::read_sf(here::here("data","gis_osm_buildings_a_free_1.gpkg"),
                         query = "SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL) OR type in ('residential',
                         'apartments', 'house', 'static_caravan', 'detached')")

# Read in roads layers
roads <- sf::read_sf(here::here("data","gis_osm_roads_free_1.gpkg"), query = "SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'") 

# ---- Read in Census Data ----

# Read in Census geodatabase layers in separately and join geometry
geom_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                          layer = 'ACS_2019_5YR_TRACT_48_TEXAS')
income_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                          layer = 'X19_INCOME')
              # Assign geom_layer as the geometry for the income layer
              geom_layer <- st_as_sfc(geom_layer)
texas_census <- st_sf(income_layer, geom = geom_layer)  %>%
  dplyr::select(id = GEOID,
                med_inc = B19013e1)

```

Inspect & Prepare Vector Data CRS
```{r}
# ---- Change CRS of Vector Data ----   
              
# Create a vector data list
vector_list <- c("buildings", "roads", "texas_census")
              
# Transform CRS to EPSG: 3083
for (i in vector_list) {
  assign(i, if (st_crs(get(i))$epsg != 3083)
         st_transform(get(i), crs = 3083)
         else get(i))
}
       
```

Process Data:
```{r}
# ---- Crop Vector Layers to Houston ----   

# Projected BBox Bounds
bbox_proj <- st_bbox(c(xmin = 1838039,
                  xmax = 2006680,
                  ymin = 7216740,
                  ymax = 7385430), crs = 3083)

# Crop to Houston
houston_buildings <- st_crop(buildings, bbox_proj) 
houston_census <- st_crop(texas_census, bbox_proj)

```


### Calculate change in lights
```{r}

# ---- Calculate difference in night lights ----   

# Diff in lights
diff_lights <- before_lights - after_lights

# Reclassify raster values for above and below the 200 threshold
# WE COULD DO THE CLASS BRACKETING METHOD TO STREAMLINE?
#diff_rcl <- diff_lights[diff_lights < 200] <- NA

# ---- Create a blackout mask ----   

rcl <- matrix(c(-Inf, 200, 0,
                200, Inf, 1),
              ncol = 3, byrow = TRUE)

# Apply reclassification matrix
reclassified <- terra::classify(diff_lights, rcl = rcl)
values(reclassified) <- as.factor(values(reclassified))

# Reclassify values below 200 to be NA
reclassified[reclassified == 0] <- NA

# Convert SpatRaster to polygons
diff_poly <- as.polygons(reclassified) %>% 
  st_as_sf() %>%
  st_make_valid()

diff_poly <- st_transform(diff_poly, crs = 3083)

# Assuming that it is okay to treat all spatial data is planar
sf::sf_use_s2(TRUE)
sf::sf_use_s2(FALSE)
```

# Set of maps comparing night light intensities before and after the first to storms

```{r}
# ---- Crop before and after images to Houston ----   

# Define Houston Boundary Extent
bbox <- st_bbox(c(xmin = -96.5,
                  xmax = -94.5,
                  ymin = 29,
                  ymax = 30.5), 
                crs = st_crs(4326))

# Crop before and after images
before_lights <- crop(before_lights, bbox)
after_lights <- crop(after_lights, bbox)

# Crop to exclude no lights
before_lights_only <- before_lights
before_lights_only[before_lights_only < 50] <- NA

after_lights_only <- after_lights
after_lights_only[after_lights_only < 50] <- NA
```

```{r}
# ---- Prepare Background Layers for Map ----   

roads_proj <- st_transform(roads, st_crs(before_lights))
census_proj <- st_transform(houston_census, st_crs(before_lights))

```

```{r}

# ---- Define Night Light Color Palette ----   

light_palette <- colorRampPalette(c("#07222B", "#FF6ACC", "#E0D71B", "lightyellow"), bias = 1.1)

# ---- Prepare Background Layers for Map ----   

# Project background layers to the same crs
roads_proj <- st_transform(roads, st_crs(before_lights))
census_proj <- st_transform(houston_census, st_crs(before_lights))

# ---- Define Map Boundary Extent ----   

# Define map bbox params
bbox_map <- c(xmin = -96.4, ymin = 29.05, xmax = -94.7, ymax = 30.45)


# ---- Create Before Map ---- 

before_map <-
  
# Add census data for background
tm_shape(census_proj, bbox = bbox_map) + 
  tm_polygons(alpha = 0,
              border.col = "#020608") +
  
# Add highways for background
tm_shape(roads_proj) + 
  tm_lines(col = "#020608",
           lwd = 2) +
  
# Add night lights layer transparent overlay to mute roads
tm_shape(before_lights) + 
  tm_raster(palette = light_palette(10),
            style = "cont",
            stretch = "hist",
            breaks = c(0, 10000),
            legend.is.portrait = FALSE,
            title = "Light Intensity",
            alpha = 0.7,
            legend.show = FALSE) +
  
# Add nights lights layer to top
tm_shape(before_lights_only, bbox = bbox) + 
  tm_raster(palette = light_palette(10),
            style = "cont",
            stretch = "hist",
            colorNA = rgb(0, 0, 0, 0),
            breaks = c(0, 250, 500, 800, 1000, 5000, 8000, 10000),
            legend.is.portrait = FALSE,
            title = "Nighttime Light Intensity",
            alpha = 0.9,
            labels = c("Low","","","","","","","High")) +
  
  # Format layout
  tm_layout(legend.position = c(0.02, 0.04),
            legend.text.color = "#D3DFEB",
            legend.show = TRUE,
            legend.hist.width = 1,
            legend.format = list(text.align = "center"),
            legend.title.color = "#D3DFEB",
            legend.title.size = 0.8,
            legend.text.size = 0.7,
            frame = FALSE,
            bg.color = "#07222B",
            main.title = "Before the Storm                      Feb. 7, 2023",
            main.title.fontface = "bold",
            main.title.color = "#D3DFEB") +
  
  # Edit scale bar
  tm_scale_bar(color.dark = "#9BB4CC",
               color.light = "#435058",
               text.color = "grey",
               breaks = c(0,10)) +
  
  # Edit compass
  tm_compass(type = "arrow",
             size = 1,
             position = c(0.89, 0.07),
             color.dark = "#9BB4CC",
             color.light = "grey",
             text.color = "grey",
             text.size = .6) +
  
  # Add label for Houston, TX
  tm_credits("Houston, TX ",
           position = c(0.09, 0.6),
           col = "#07222B",
           bg.color = "#E0D71B",
           bg.alpha = 0.8,
           fontface = "bold",
           size = 1) +
  tm_credits("  ____",
           position = c(0.28, 0.61),
           col = "#E0D71B",
           fontface = "bold",
           size = 1.2,
           width = 0.24,
           alpha = 0.8)

# ---- Create After Map ---- 

after_map <-
  
# Add census data for background
tm_shape(census_proj, bbox = bbox_map) + 
  tm_polygons(alpha = 0,
              border.col = "#020608") +
  
# Add highways for background
tm_shape(roads_proj) + 
  tm_lines(col = "#020608",
           lwd = 2) +
  
# Add night lights layer transparent overlay to mute roads
tm_shape(after_lights) + 
  tm_raster(palette = light_palette(10),
            style = "cont",
            stretch = "hist",
            breaks = c(0, 10000),
            legend.is.portrait = FALSE,
            title = "Light Intensity",
            alpha = 0.7,
            legend.show = FALSE) +
  
# Add nights lights layer to top
tm_shape(after_lights_only, bbox = bbox) + 
  tm_raster(palette = light_palette(10),
            style = "cont",
            stretch = "hist",
            colorNA = rgb(0, 0, 0, 0),
            breaks = c(0, 250, 500, 800, 1000, 5000, 8000, 10000),
            legend.is.portrait = FALSE,
            title = "Nighttime Light Intensity",
            alpha = 0.9,
            labels = c("Low","","","","","","","High")) +
  
  # Format layout
  tm_layout(legend.position = c(0.02, 0.04),
            legend.text.color = "#D3DFEB",
            legend.show = TRUE,
            legend.hist.width = 1,
            legend.format = list(text.align = "center"),
            legend.title.color = "#D3DFEB",
            legend.title.size = 0.8,
            legend.text.size = 0.7,
            frame = FALSE,
            bg.color = "#07222B",
            main.title = "After the Storm                      Feb. 16, 2023",
            main.title.fontface = "bold",
            main.title.color = "#D3DFEB") +
  
  # Edit scale bar
  tm_scale_bar(color.dark = "#9BB4CC",
               color.light = "#435058",
               text.color = "grey",
               breaks = c(0,10)) +
  
  # Edit compass
  tm_compass(type = "arrow",
             size = 1,
             position = c(0.89, 0.07),
             color.dark = "#9BB4CC",
             color.light = "grey",
             text.color = "grey",
             text.size = .6) +
  
  # Add label for Houston, TX
  tm_credits("Houston, TX ",
           position = c(0.09, 0.6),
           col = "#07222B",
           bg.color = "#E0D71B",
           bg.alpha = 0.8,
           fontface = "bold",
           size = 1) +
  tm_credits("  ____",
           position = c(0.28, 0.61),
           col = "#E0D71B",
           fontface = "bold",
           size = 1.2,
           width = 0.24,
           alpha = 0.8)

# ---- Combine Before and After Maps into an Animation ----

maps_combo <- list(before_map, after_map)  
outage_animation <- tmap_animation(maps_combo,
                                   delay = 300,
                                   width = 600,
                                   height = 600,
                                  filename = "outage_animation.gif") 

```

Below is an animation showing changes before and after the outage:

![Data Source: NASA VIIRS](outage_animation.gif)

This map shows the difference in night light intensity between a typical night before the storm (February 7, 2023), compared to night light intensity after the storm (Feb 16, 2023), when the Houston, Region experienced widespread power outages. The night light intensity ranges from no light (dark blue), to pink (mid light intensity), to yellow (highest light intensity).

### Create buffer around highways and crop diff to it
```{r}
# Assuming that it is okay to treat all spatial data is planar
sf::sf_use_s2(TRUE)
sf::sf_use_s2(FALSE)

highway_buffer <- st_buffer(roads, dist = 200) %>%
  st_union() %>%
  st_make_valid() %>%
  st_as_sf()

diff_poly <- st_make_valid(diff_poly)
 
diff_hwy_mask <- st_difference(diff_poly, highway_buffer)
```

### Identify homes likely impacted by blackouts
```{r}

# Make all spatial data planar
sf::sf_use_s2(TRUE)
sf::sf_use_s2(FALSE)

# ---- Select buildings that overlap with areas that experienced a blackout  ----   

# Get intersection of buildings layer and areas that experienced a blackout - with highways masked
building_blackouts <- st_intersects(diff_hwy_mask, houston_buildings) 

# Select unique buildings and parse into a list
blackout_buildings_index <- unlist(building_blackouts) %>%
  unique()

# Create new column in Houston_buildings that indicates whether or not it experienced a blackout
houston_buildings$Blackout <- "No"
houston_buildings$Blackout[blackout_buildings_index] <- "Yes"  


```

```{r}
houston_buildings_blackout <- houston_buildings %>% filter(Blackout == "Yes")
```

#### Map of the homes in in Houston that lost power

  
```{r}
# ---- Map of the homes in in Houston that lost power  ----   

# Add Layer of Homes in Houston with Power

# Add census data for background
buildings_map <- tm_shape(houston_census, bbox = bbox_proj) + 
  tm_polygons(alpha = 0,
              border.col = "#020608",
              lwd = .8,
              border.alpha = 0.4) +
  
# Add highways for background
tm_shape(roads) + 
  tm_lines(col = "#020608",
           lwd = 1,
           alpha = 0.2) +

# Add buildings
tm_shape(houston_buildings_blackout, bbox = bbox_proj) + 
  tm_fill(col = "Blackout",
          palette = c("Yes" = "#00BFB2"),
          title = "Experienced Outage") +
  
# Formatting
tm_layout(frame = FALSE,
          legend.text.color="grey",
          legend.title.color='grey',
          bg.color = "#07222B",
          legend.show = FALSE,
          main.title = "Homes in Houston that Lost Power",
          main.title.fontface = "bold",
          main.title.color = "#D3DFEB") +
  
  # Add title
tm_credits("Over 157 Thousand Homes Were Left Without Power\nDuring the February 2021 Storm",
             position = c(0.02, 0.9),
             size = 0.8,
             col = "white") +
 
  # Edit scale bar
  tm_scale_bar(color.dark = "#9BB4CC",
               color.light = "#435058",
               text.color = "grey",
               breaks = c(0,10)) +
  # Edit compass
  tm_compass(type = "arrow",
             size = 1,
             position = c(0.89, 0.09),
             color.dark = "#9BB4CC",
             color.light = "grey",
             text.color = "grey",
             text.size = .6) +
  
  # Add label for Houston, TX
  tm_credits("Houston, TX ",
           position = c(0.09, 0.6),
           col = "#07222B",
           bg.color = "#E0D71B",
           bg.alpha = 0.8,
           fontface = "bold",
           size = 1) +
  tm_credits("  ____",
           position = c(0.28, 0.61),
           col = "#E0D71B",
           fontface = "bold",
           size = 1.2,
           width = 0.24,
           alpha = 0.8)

# Investigate the number of homes in Houston that lost power
print(paste("The number of homes in Houston that lost power was approximately", nrow(building_blackouts)))

buildings_map
```


```{r}
# ---- Identify census tracts that contain buildings that experienced a blackout  ----  

# Get intersection of buildings layer and areas that experienced a blackout - with highways masked
census_blackouts <- st_intersects(houston_census, houston_buildings_blackout) 

# Create new column in houston_buildings that indicates whether or not it experienced a blackout
# Get the census tracts that have at least one building with a blackout
blackout_census_index <- which(lengths(census_blackouts) > 0)

# Create new column in houston_census that indicates whether or not it experienced a blackout
houston_census$Blackout <- "No"  # Default to "No"
houston_census$Blackout[blackout_census_index] <- "Yes"  # Set "Yes" for tracts with blackout buildings

```


```{r}
# ---- Map of census tracts impacted by power outages  ----   

census_map <- tm_shape(houston_census) + 
  tm_polygons(col = "Blackout",
          palette = c("Yes" = "#00BFB2",
                      "No" = "yellow"),
          border.col = "#07222B",
          lwd = 0.2) +
  tm_layout(frame = FALSE,
            legend.text.color="grey",
            legend.position = c(0.05, 1),
            legend.title.color='grey',
            bg.color = "#07222B",
            main.title = "Census Blocks in Houston That Were Impacted\nBy Power Outages",
          main.title.fontface = "bold",
          main.title.color = "#D3DFEB") +
  
   # Edit scale bar
  tm_scale_bar(color.dark = "#9BB4CC",
               color.light = "#435058",
               text.color = "grey",
               breaks = c(0,10)) +
  # Edit compass
  tm_compass(type = "arrow",
             size = 1,
             position = c(0.89, 0.09),
             color.dark = "#9BB4CC",
             color.light = "grey",
             text.color = "grey",
             text.size = .6)
#table(houston_census$Blackout)

census_map
```

```{r}
# ---- Plot Difference ----   


ggplot(data = houston_census) +
  geom_violin(aes(x = med_inc, y = Blackout),
              fill = "#00BFB2") +
  labs(
    x = "Median Household Income",
    y = "Blackout Status",
    title = "Income Distribution by Blackout Status") +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "none",
    plot.background = element_rect(fill = "#07222B"),
    panel.background = element_rect(fill = "#07222B",
                                    color = NA),
    text = element_text(color = "white"),
    axis.text = element_text(color = "white"),
    axis.title = element_text(color = "white"),
    plot.title = element_text(color = "white",
                              size = 16,
                              face = "bold")
  )
```

This project investigates the impact of a severe weather event in 2021 which caused widespread power outages throughout the state of Texas, including Houston. I use NASA Visible Infrared Imaging Radiometer Suite (VIIRS) nighttime imagery to detect night lights to compare the intensity of night lights before and after the first major storm. I also overlayed the imagery with census tract data pertaining to the median household income. I found that the median household income for census tracts that experienced a blackout was slightly higher then the median for tracts that didn't experience an outage. For this project, I did not normalize for area, so it is possible that the difference in sample size of each group could skew the observed median values.


