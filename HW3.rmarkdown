---
title: "hw3-nicolelpepper"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# Load libraries
library(terra)
library(geodata)
library(tidyverse)
library(tmap)
library(kableExtra)
library(spData)
library(spDataLarge)
library(here)
library(viridisLite) 
library(terra)
library(sf)
library(purrr)
library(stars)
library(raster)
library(dplyr)
library(magick)


```


Read in Project Data:

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# Read in the light raster datasets 
before_a <- rast("data/VNP46A1/VNP46A1.A2021038.h08v05.001.2021039064328.tif") 
before_b <- rast("data/VNP46A1/VNP46A1.A2021038.h08v06.001.2021039064329.tif")  
after_a <- rast("data/VNP46A1/VNP46A1.A2021047.h08v05.001.2021048091106.tif")
after_b <- rast("data/VNP46A1/VNP46A1.A2021047.h08v06.001.2021048091105.tif") 

before_lights <- merge(before_a,before_b) 
after_lights <- merge(after_a,after_b) 


# Read in buildings layer
buildings <- sf::read_sf(here::here("data","gis_osm_buildings_a_free_1.gpkg"),
                         query = "SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL) OR type in ('residential',
                         'apartments', 'house', 'static_caravan', 'detached')")

# Read in roads layers
roads <- sf::read_sf(here::here("data","gis_osm_roads_free_1.gpkg"), query = "SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'") 

# Read in Census geodatabase layers in separately and join geometry
geom_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                          layer = 'ACS_2019_5YR_TRACT_48_TEXAS')
income_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                            layer = 'X19_INCOME')
              # Assign geom_layer as the geometry for the income layer
              geom_layer <- st_as_sfc(geom_layer)
              texas_join <- st_sf(income_layer, geom = geom_layer)
              # Check out the layers in the gdb, select 
              #st_layers('data/ACS_2019_5YR_TRACT_48_TEXAS.gdb')

# Create a data list
vector_list <- c("buildings", "roads", "texas_join")
#raster_list <- list(before_a, before_b, after_a, after_b)


```



Transform CRS:

```{r}

# Transform CRS to EPSG: 3083
for (i in vector_list) {
  assign(i, if (st_crs(get(i))$epsg != 3083) st_transform(get(i), crs = 3083)
         else get(i))
}

# # Transform CRS for raster data to EPSG: 3083
# for (r in seq_along(raster_list)) {
#   if (inherits(raster_list[[r]], "Raster")) {
#     if (!compareCRS(crs(raster_list[[r]]), CRS("+init=epsg:3083"))) {
#       raster_list[[r]] <- projectRaster(raster_list[[r]], crs = CRS("+init=epsg:3083"))
#     }
# }}
```

Filter and Clean Data

B19001e1\|HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2011 INFLATION-ADJUSTED DOLLARS) - Universe: Households - Total: -- (Estimate)

B19013e1\|MEDIAN HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2011 INFLATION-ADJUSTED DOLLARS) - Universe: Households - Median household income in th

```{r}
# Check out col names for income_layer
colnames(income_layer)

# Subset data by selecting the layer 'B19001e1' layer and renaming to 'med_inc'
houston_inc <- texas_join %>%
  dplyr::select(med_inc = B19013e1)

```

```{r}
# Generate a map of Texas blocks colored by income
tm_shape(houston_inc) +
  tm_fill(col = 'med_inc', palette = 'Reds')
```

```{r}
# Diff in lights
diff_lights <- before_lights - after_lights
```

```{r}
plot(diff_lights)
```

```{r}
# Reclassify raster values for above and below the 200 threshold
# WE COULD DO THE CLASS BRACKETING METHOD TO STREAMLINE?
#diff_rcl <- diff_lights[diff_lights < 200] <- NA

```


### Create blackout mask

```{r}
# Reclassify raster values for above and below the 200 threshold
# WE COULD DO THE CLASS BRACKETING METHOD TO STREAMLINE?
rcl <- matrix(c(-Inf, 200, 1,
                200, Inf, 2),
              ncol = 3, byrow = TRUE)
reclassified <- terra::classify(diff_lights, rcl = rcl)
# Treat as factor - IS THIS NECESSARY?
values(reclassified) <- as.factor(values(reclassified))
```

```{r}
# Reclassify values below 200 to be NA
reclassified[reclassified == 1] <- NA
plot(reclassified)

```

```{r}

# Convert SpatRaster to polygons
diff_poly <- as.polygons(reclassified) %>% 
  st_as_sf()

```

```{r}
plot(diff_poly)
```

```{r}
st_crs(diff_poly)
```

```{r}
# BBox extent format (xmin,xmax,ymin,ymax)
# (-96.5, 29), (-96.5, 30.5), (-94.5, 30.5), (-94.5, 29)
bbox <- st_bbox(c(xmin = -96.5,
                  xmax = -94.5,
                  ymin = 29,
                  ymax = 30.5))

diff_crop <- st_crop(diff_poly, bbox) %>%
  st_make_valid() %>%
  st_transform(crs = 3083)

```

```{r}
plot(diff_crop)
```


### Exclude highways from the cropped blackout mask


```{r}
# Buffer HWY data
highways <- st_buffer(roads,
                      dist = 200) %>%
            st_union()

diff_hwy_masked <- st_difference(diff_crop, highways)
```

```{r}
tm_shape(diff_hwy_masked) + 
  tm_polygons(col = "orange", border.col = "darkorange") +
  tm_layout(main.title = "Houston Lights Difference (Highways Masked)",
            frame = FALSE)
```

```{r}
# crop raster to the extent of the vector object
#terra_crop <- terra::crop(lights_poly, bbox)

```


### Identify homes likely impacted by blackouts


```{r}
buildings %>% st_crop(buildings, bbox = diff_crop) 

```

```{r}
building_blackouts <- st_intersection(diff_hwy_masked, buildings) 


tm_shape(building_blackouts) + 
  tm_polygons(col = "lightblue", border.col = "darkblue") +
  tm_layout(main.title = "Building Blackouts",
            frame = FALSE)

```

```{r}
census_blackouts <- st_intersection(houston_inc, building_blackouts)

```

```{r}

tm_shape(census_blackouts) + 
  tm_polygons(col = "pink", border.col = "red") +
  tm_layout(main.title = "Census Blackouts",
            frame = FALSE)
```

