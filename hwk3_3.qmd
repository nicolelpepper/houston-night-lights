---
title: "Homework Assignment #3"
subtitle: "Houston Power Outage"
author: "Nicole Pepper"
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
format:
  html:
    toc: true 
editor_options: 
  chunk_output_type: console
---

Note: I still have some polishing to do on this assignment - I'm planning to use a regrade to do so! Just a heads up! Thanks! 

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Load Libraries ----

# Load libraries
library(terra)
library(geodata)
library(tidyverse)
library(tmap)
library(kableExtra)
library(spData)
library(spDataLarge)
library(here)
library(viridisLite) 
library(terra)
library(sf)
library(purrr)
library(stars)
library(raster)
library(dplyr)
library(gifski)
library(slideview)
```

Read in Project Data:
```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Read in Night Light Data ----

# Read in the night light raster data
before_a <- rast("data/VNP46A1/VNP46A1.A2021038.h08v05.001.2021039064328.tif") 
before_b <- rast("data/VNP46A1/VNP46A1.A2021038.h08v06.001.2021039064329.tif")  
after_a <- rast("data/VNP46A1/VNP46A1.A2021047.h08v05.001.2021048091106.tif")
after_b <- rast("data/VNP46A1/VNP46A1.A2021047.h08v06.001.2021048091105.tif") 

# Merge the two images per time period (before & after)
before_lights <- merge(before_a,before_b) 
after_lights <- merge(after_a,after_b) 

# ---- Read in Buildings and Roads Data ----

# Read in buildings layer
buildings <- sf::read_sf(here::here("data","gis_osm_buildings_a_free_1.gpkg"),
                         query = "SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL) OR type in ('residential',
                         'apartments', 'house', 'static_caravan', 'detached')")

# Read in roads layers
roads <- sf::read_sf(here::here("data","gis_osm_roads_free_1.gpkg"), query = "SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'") 

# ---- Read in Census Data ----

# Read in Census geodatabase layers in separately and join geometry
geom_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                          layer = 'ACS_2019_5YR_TRACT_48_TEXAS')
income_layer <- sf::read_sf(here::here("data", "ACS_2019_5YR_TRACT_48_TEXAS.gdb"),
                          layer = 'X19_INCOME')
              # Assign geom_layer as the geometry for the income layer
              geom_layer <- st_as_sfc(geom_layer)
texas_census <- st_sf(income_layer, geom = geom_layer)  %>%
  dplyr::select(id = GEOID,
                med_inc = B19013e1)

```

Inspect & Prepare Vector Data CRS

```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Change CRS of Vector Data ----   
              
# Create a vector data list
vector_list <- c("buildings", "roads", "texas_census")
              
# Transform CRS to EPSG: 3083
for (i in vector_list) {
  assign(i, if (st_crs(get(i))$epsg != 3083)
         st_transform(get(i), crs = 3083)
         else get(i))
}
       
```


```{r}
# ---- Crop Vector Layers to Houston ----   

# Define Houston Boundary Extent
bbox_poly <- c(xmin = -96.5,
                  xmax = -94.5,
                  ymin = 29,
                  ymax = 30.5)

# Crop to Houston
houston_buildings <- st_crop(buildings, bbox_poly) 
houston_census <- st_crop(texas_census, bbox_poly)

```


